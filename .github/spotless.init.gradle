// Load Spotless for THIS init script (allowed)
initscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath("com.diffplug.spotless:spotless-plugin-gradle:7.2.1")
    }
}

gradle.rootProject { root ->
    // Prefer subprojects; if none exist, include the root
    def targets = root.subprojects
    if (targets.isEmpty()) {
        targets = [root]
    }

    targets.each { Project p ->
        // Do NOT add p.repositories{} here â€” build uses FAIL_ON_PROJECT_REPOS

        // Apply Spotless by class using the init script classpath
        p.apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

        // Configure Spotless via its typed extension
        p.extensions.configure(com.diffplug.gradle.spotless.SpotlessExtension) { ext ->
            // Kotlin source
            kotlin {
                target("**/*.kt")
                targetExclude("**/build/**")
                ktlint("1.3.1") // Ensure this can be resolved from settings.gradle repositories
                trimTrailingWhitespace()
                endWithNewline()
            }

            // Kotlin Gradle scripts
            kotlinGradle {
                target("**/*.gradle.kts")
                targetExclude("**/build/**")
                ktlint("1.3.1")
                trimTrailingWhitespace()
                endWithNewline()
            }

            // Java (if present)
            java {
                target("**/*.java")
                targetExclude("**/build/**")
                googleJavaFormat("1.17.0")
                trimTrailingWhitespace()
                endWithNewline()
            }
        }
    }
}